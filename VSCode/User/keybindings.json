// Place your key bindings in this file to overwrite the defaults
[
    // Upper / Lower case
    {
        "key": "cmd+k cmd+u",
        "command": "editor.action.transformToUppercase",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+k cmd+l",
        "command": "editor.action.transformToLowercase",
        "when": "editorTextFocus"
    },
    // multiple cursor
    {
        "linux": "ctrl+shift+up",
        "key": "ctrl+alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    // Other
    {
        "key": "cmd+p",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "cmd+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "cmd+t",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "cmd+t",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "cmd+k cmd+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+w",
        "command": "unicode-latex.insertMathSymbol",
    },
    // vim
    {
        "key": "escape",
        "command": "-extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "escape",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && vim.mode != 'Normal' && !globalMessageVisible && !inDebugRepl"
    },
    // movement
    {
        "key": "cmd+alt+left",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "cmd+alt+right",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "cmd+alt+down",
        "command": "editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+alt+up",
        "command": "editor.action.previewDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    // build
    {
        "key": "shift+cmd+b",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.tasks.terminate",
        "when": "!terminalFocus"
    },
    {
        "key": "cmd+b",
        "command": "python.execInTerminal",
        "when": "editorTextFocus && editorLangId == python && !editorHasSelection",
    },
    // for terminals
    {
        "key": "cmd+k cmd+p",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "cmd+k cmd+p",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+k cmd+c",
        "command": "python.createTerminal"
    },
    {
        "key": "cmd+k cmd+n",
        "command": "workbench.action.terminal.focusNext"
    }
]
